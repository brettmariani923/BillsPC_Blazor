@page "/search-pokemon"
@using BillsPC.Shared.Models
@using BillsPC.Repos
@inject IPokemonRepo Repo

<h3>Search Pokémon</h3>

<input @bind="pokemonName" placeholder="Enter Pokemon name" class="form-control" />

<button type="button" @onclick="() => Search()" class="btn btn-primary mt-2">Search</button>

<p>@(answer == null ? "No search yet" : $"{answer.Count} Pokémon found")</p>

@if (answer?.Count > 0)
{
    <table class="table mt-3">
        <thead>
            <tr>
                <th>PokemonID</th>
                <th>Name</th>
                <th>HP</th>
                <th>Attack</th>
                <th>Defense</th>
                <th>Speed</th>
                <th>SpecialAttack</th>
                <th>SpecialDefense</th>
                <th>Ability</th>
                <th>Legendary</th>
                <th>Region</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in answer)
            {
                <tr>
                    <td>@p.PokemonID</td>
                    <td>@p.Name</td>
                    <td>@p.HP</td>
                    <td>@p.Attack</td>
                    <td>@p.Defense</td>
                    <td>@p.Speed</td>
                    <td>@p.SpecialAttack</td>
                    <td>@p.SpecialDefense</td>
                    <td>@p.Ability</td>
                    <td>@(p.Legendary ? "Yes" : "No")</td>
                    <td>@p.Region</td>
                </tr>
            }
        </tbody>
    </table>
}
else if (answer != null)
{
    <p>No Pokémon found matching your search.</p>
}

@code {
    public string pokemonName = string.Empty;
    public List<PokemonInfo> answer;

    public async Task Search()
    {
        if (string.IsNullOrWhiteSpace(pokemonName))
        {
            answer = new List<PokemonInfo>();
            return;
        }

        answer = await Repo.ReturnPokemonLikeAsync(pokemonName);
    }
}

